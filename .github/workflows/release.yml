name: Release Update

on:
  push:
    tags: [v*]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      
    runs-on: ${{ matrix.os }}  
    continue-on-error: true

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install nuitka

      - name: Build
        run : |
          python -m nuitka --standalone --enable-plugin=tk-inter --enable-plugin=numpy --assume-yes-for-downloads --output-dir=build --onefile main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
 
  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2

      - name: Load version and changelog
        run: |
          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV # The name of the tag which triggered the build
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV # These 3 lines are very confusing but github is weird so they are needed, gets the last entry into the changelog.
          awk -v RS='#' 'NR==3{printf"#### "; print; printf"\n"; exit}' changelog >> $GITHUB_ENV
          echo EOF >> $GITHUB_ENV

      - uses: actions/download-artifact@v3
        with:
          name: Windows Build
          path: builds/windows-build

      - uses: actions/download-artifact@v3
        with:
          name: Linux Build
          path: builds/linux-build

      - uses: actions/download-artifact@v3
        with:
          name: macOs Build
          path: builds/mac-build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.VERSION }}
          body: | 
            # Mindustry Launcher (${{ env.VERSION }})
            ## Latest Changelog (May be out of date)
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/windows-build
          asset_name: MindustryLauncher Windows
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/linux-build
          asset_name: MindustryLauncher Linux
          asset_content_type: application/zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/mac-build
          asset_name: MindustryLauncher MacOS
          asset_content_type: application/zip